{"version":3,"file":"static/js/590.4a42a0fe.chunk.js","mappings":"uPAEaA,EAAYC,EAAAA,GAAAA,IAAH,uCAITC,EAAeD,EAAAA,GAAAA,GAAH,2C,8JCHV,SAASE,IACtB,IAAMC,ECAiB,WACvB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOH,EAAP,KAAgBI,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEsBC,EAAAA,EAAAA,IAAYL,GAFlC,OAEUM,EAFV,OAGIH,EAAWG,GAHf,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,KACC,CAACT,IAEGD,EDhBSW,GAChB,OACE,8BACGX,GAAWA,EAAQY,OAAS,GAC3B,SAAC,EAAAhB,UAAD,UACGI,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,OAAhB,OACX,4BACE,UAAC,EAAAlB,aAAD,WAAekB,EAAf,QACA,6BAAKD,EAAL,SAFQD,SAOd,0D,yMEhBRG,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,IAAAA,IAAA,uCAA0CC,IAD5D,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBP,IAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDM,EAApD,+CADlB,cACCJ,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BX,GAA5B,uFACkBG,IAAAA,IAAA,iBAAoBH,EAApB,oBAAkCI,IADpD,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyBZ,GAAzB,uFACkBG,IAAAA,IAAA,iBAAoBH,EAApB,4BAA0CI,EAA1C,oBADlB,cACCE,EADD,yBAEEA,EAASC,KAAKM,MAFhB,kEAKA,SAAerB,EAAtB,+CAAO,OAAP,oBAAO,WAA2BQ,GAA3B,uFACkBG,IAAAA,IAAA,iBAAoBH,EAApB,4BAA0CI,EAA1C,2BADlB,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB","sources":["Pages/Reviews/Review.styled.js","Pages/Reviews/Reviews.js","hooks/useReviewHook.js","service/api-service.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ReviewDiv = styled.div`\npadding: 10px\n`\n\nexport const SubTitleName = styled.h3`\nfont-size: 15px;\n`","import { useReview } from '../../hooks/useReviewHook';\nimport { SubTitleName, ReviewDiv } from './Review.styled';\n\nexport default function Reviews() {\n  const reviews = useReview();\n  return (\n    <>\n      {reviews && reviews.length > 0 ? (\n        <ReviewDiv>\n          {reviews.map(({ id, content, author }) => (\n            <div key={id}>\n              <SubTitleName>{author}:</SubTitleName>\n              <p>\"{content}\"</p>\n            </div>\n          ))}\n        </ReviewDiv>\n      ) : (\n        <p>NO reviews for this movie.</p>\n      )}\n    </>\n  )\n};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReview } from '../service/api-service';\n\nexport const useReview = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    async function fetchCastID() {\n      try {\n        const rev = await fetchReview(movieId);\n        setReviews(rev);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchCastID();\n  }, [movieId]);\n\n  return reviews;\n}","import axios from \"axios\";\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst api_key = \"3284913a940180ec63ebc0044db949d5\";\n\nexport async function fetchApi() {\n  const response = await axios.get(`/trending/movie/week?api_key=${api_key}`);\n  return response.data.results;\n};\n\nexport async function fetchSearchMovie(query) {\n  const response = await axios.get(`/search/movie?api_key=${api_key}&query=${query}&language=en-US&page=1&include_adult=false`);\n  return response.data.results;\n};\n\nexport async function fetchMovieId(id) {\n  const response = await axios.get(`/movie/${id}?api_key=${api_key}`);\n  return response.data;\n};\n\nexport async function fetchCast(id) {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${api_key}&language=en-US`);\n  return response.data.cast;\n};\n\nexport async function fetchReview(id) {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${api_key}&language=en-US&page=1`);\n  return response.data.results;\n};\n\n"],"names":["ReviewDiv","styled","SubTitleName","Reviews","reviews","movieId","useParams","useState","setReviews","useEffect","fetchReview","rev","console","log","fetchCastID","useReview","length","map","id","content","author","axios","api_key","fetchApi","response","data","results","fetchSearchMovie","query","fetchMovieId","fetchCast","cast"],"sourceRoot":""}