{"version":3,"file":"static/js/683.58c06545.chunk.js","mappings":"0QAGe,SAASA,IACtB,IAAMC,ECDwB,WAC9B,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOD,EAAP,KAAeE,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,MAFvB,OAEUC,EAFV,OAGIH,EAAUG,GAHd,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,KACC,IAEIR,EDdQS,GAEf,OACE,iCACE,SAAC,EAAAC,MAAD,6BACCV,IACC,SAAC,EAAAW,UAAD,UACGX,EAAOY,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,EAAAC,WAAD,CAAYC,GAAE,gBAAWF,EAAMG,IAA/B,SAAsCH,EAAMI,OAASJ,EAAMK,kBADpDL,EAAMG,c,sKETdF,GAAaK,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,sKAWVR,EAAYQ,EAAAA,GAAAA,GAAH,6CAITT,EAAQS,EAAAA,GAAAA,GAAH,uI,yMCjBlBE,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAET,SAAelB,IAAtB,4CAAO,OAAP,oBAAO,oGACkBiB,IAAAA,IAAA,uCAA0CC,IAD5D,cACCC,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBN,IAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDK,EAApD,+CADlB,cACCJ,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BZ,GAA5B,uFACkBK,IAAAA,IAAA,iBAAoBL,EAApB,oBAAkCM,IADpD,cACCC,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyBb,GAAzB,uFACkBK,IAAAA,IAAA,iBAAoBL,EAApB,4BAA0CM,EAA1C,oBADlB,cACCC,EADD,yBAEEA,EAASC,KAAKM,MAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2Bf,GAA3B,uFACkBK,IAAAA,IAAA,iBAAoBL,EAApB,4BAA0CM,EAA1C,2BADlB,cACCC,EADD,yBAEEA,EAASC,KAAKC,SAFhB","sources":["Pages/HomePage/HomePage.js","hooks/userHookHomePage.js","Pages/HomePage/HomePage.styled.js","service/api-service.js"],"sourcesContent":["import { useFetchHomePage } from '../../hooks/userHookHomePage';\nimport { GlobalLink, ListMovie, Title } from './HomePage.styled';\n\nexport default function HomePage() {\n  const movies = useFetchHomePage();\n\n  return (\n    <>\n      <Title>Trending today</Title>\n      {movies && (\n        <ListMovie>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <GlobalLink to={`movie/${movie.id}`}>{movie.title || movie.original_title}</GlobalLink>\n            </li>\n          ))}\n        </ListMovie>\n      )}\n    </>\n  )\n};\n","import { useState, useEffect } from 'react'\nimport { fetchApi } from \"../service/api-service\";\n\nexport const useFetchHomePage = () => {\n  const [movies, setMovies] = useState(null)\n\n  useEffect(() => {\n    async function fetch() {\n      try {\n        const home = await fetchApi();\n        setMovies(home);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetch();\n  }, []);\n\n  return movies;\n}","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const GlobalLink = styled(Link)`\n  text-decoration: none;\n  padding: 12px;\n  font-weight: 500;\n  color: #2a363b;\n  font-size: 18px;\n  &:hover {\n    color:#db1a5e;\n  }\n`\n\nexport const ListMovie = styled.ul`\n  list-style: auto;\n`;\n\nexport const Title = styled.h2`\n  font-size: 25px;\n  margin: 10px 20px;\n  &::first-letter{\n    font-size:140%;\n    color:#db1a5e\n  }\n}\n`\n\n\n","import axios from \"axios\";\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst api_key = \"3284913a940180ec63ebc0044db949d5\";\n\nexport async function fetchApi() {\n  const response = await axios.get(`/trending/movie/week?api_key=${api_key}`);\n  return response.data.results;\n};\n\nexport async function fetchSearchMovie(query) {\n  const response = await axios.get(`/search/movie?api_key=${api_key}&query=${query}&language=en-US&page=1&include_adult=false`);\n  return response.data.results;\n};\n\nexport async function fetchMovieId(id) {\n  const response = await axios.get(`/movie/${id}?api_key=${api_key}`);\n  return response.data;\n};\n\nexport async function fetchCast(id) {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${api_key}&language=en-US`);\n  return response.data.cast;\n};\n\nexport async function fetchReview(id) {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${api_key}&language=en-US&page=1`);\n  return response.data.results;\n};\n\n"],"names":["HomePage","movies","useState","setMovies","useEffect","fetchApi","home","console","log","fetch","useFetchHomePage","Title","ListMovie","map","movie","GlobalLink","to","id","title","original_title","styled","Link","axios","api_key","response","data","results","fetchSearchMovie","query","fetchMovieId","fetchCast","cast","fetchReview"],"sourceRoot":""}